CREATE TABLE major(
	major_ID BIGINT AUTO_INCREMENT NOT NULL UNIQUE,
   	name VARCHAR(100) NOT NULL,
   	college VARCHAR(100) NOT NULL,
    	PRIMARY KEY(major_ID)
);

CREATE TABLE prof(
	prof_ID BIGINT AUTO_INCREMENT NOT NULL UNIQUE PRIMARY KEY,
    	prof_name VARCHAR(40) NOT NULL,
    	major_ID BIGINT NOT NULL,
    	major_name VARCHAR(100) NOT NULL,
    	FOREIGN KEY(major_ID) REFERENCES major(major_ID) ON UPDATE CASCADE
);

CREATE TABLE profBoard (
	post_ID BIGINT AUTO_INCREMENT NOT NULL UNIQUE PRIMARY KEY,
	title VARCHAR(500) NOT NULL,
	content VARCHAR(500) NOT NULL,
	click_count BIGINT NULL DEFAULT 0,
	like_count BIGINT NULL DEFAULT 0,
	reg_date DATETIME NOT NULL,
	update_date DATETIME NOT NULL,
    	prof_ID BIGINT NOT NULL,
	FOREIGN KEY (prof_ID) REFERENCES prof(prof_ID) ON UPDATE CASCADE
);

CREATE TABLE comment (
	comment_ID BIGINT AUTO_INCREMENT NOT NULL UNIQUE PRIMARY KEY,
	writer VARCHAR(40) NOT NULL,
	content  VARCHAR(1000) NOT NULL,
	reg_date DATETIME NOT NULL,
	comment_like BIGINT NULL DEFAULT 0,
    post_ID BIGINT NOT NULL,
	FOREIGN KEY (post_ID) REFERENCES profBoard(post_ID) ON UPDATE CASCADE
);

CREATE TABLE  subject  (
	haksu_num 	BIGINT NOT NULL UNIQUE PRIMARY KEY,
	user_name VARCHAR(40) NOT NULL,
     	major_ID BIGINT NOT NULL,
     	prof_ID BIGINT NOT NULL,
	FOREIGN KEY (major_ID) REFERENCES major(major_ID) ON UPDATE CASCADE,
	FOREIGN KEY (prof_ID) REFERENCES prof(prof_ID) ON UPDATE CASCADE
);

CREATE TABLE ranking (
	ref_month DATE NOT NULL,
	score INT NULL,
   	post_ID BIGINT NOT NULL,
	FOREIGN KEY (post_ID) REFERENCES profBoard(post_ID) ON UPDATE CASCADE
);